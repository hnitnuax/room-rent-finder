const jwt = require("jsonwebtoken");
const { User } = require("../models/User");

/**
 * üìå Middleware x√°c th·ª±c ng∆∞·ªùi d√πng
 */
const xacThucNguoiDung = async (req, res, next) => {
    try {
        const token = req.header("Authorization");
        if (!token) return res.status(401).json({ message: "Kh√¥ng c√≥ token, t·ª´ ch·ªëi truy c·∫≠p!" });

        const decoded = jwt.verify(token.replace("Bearer ", ""), process.env.JWT_SECRET);
        const user = await User.findById(decoded.id).populate("role");

        if (!user) {
            return res.status(404).json({ message: "Ng∆∞·ªùi d√πng kh√¥ng t·ªìn t·∫°i!" });
        }

        req.user = user;
        next();
    } catch (error) {
        res.status(401).json({ message: "Token kh√¥ng h·ª£p l·ªá!" });
    }
};

/**
 * üìå Middleware ki·ªÉm tra quy·ªÅn
 */
const kiemTraQuyen = (tenQuyen) => async (req, res, next) => {
    try {
        if (!req.user || !req.user.role || !req.user.role.permissions) {
            return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p!" });
        }

        const coQuyen = req.user.role.permissions.some((perm) => perm.tenQuyen === tenQuyen);

        if (!coQuyen) {
            return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán h√†nh ƒë·ªông n√†y!" });
        }

        next();
    } catch (error) {
        res.status(500).json({ message: "L·ªói h·ªá th·ªëng", error: error.message });
    }
};

module.exports = { xacThucNguoiDung, kiemTraQuyen };
